package com.example.eccommerce_ai.Service;

import com.example.eccommerce_ai.Enum.TokenType;
import org.springframework.data.redis.core.StringRedisTemplate;
import org.springframework.stereotype.Service;

import java.time.Duration;
import java.util.concurrent.TimeUnit;


@Service

public class RedisService  {

    private final StringRedisTemplate redisTemplate;


    public RedisService(StringRedisTemplate redisTemplate) {
        this.redisTemplate = redisTemplate;
    }

    /**
     * L∆∞u OTP v√†o Redis v·ªõi th·ªùi gian s·ªëng (TTL)
     * N·∫øu ƒë√£ c√≥ OTP c≈©, x√≥a tr∆∞·ªõc khi l∆∞u m·ªõi
     */
    public void storeOtp(String email, String otp, TokenType tokenType, int ttlMinutes) {
        String key = tokenType.name() + "_" + email;

        // üõë X√≥a OTP c≈© tr∆∞·ªõc khi l∆∞u m·ªõi (ƒë·∫£m b·∫£o kh√¥ng c√≥ tr√πng l·∫∑p)
        redisTemplate.delete(key);

        // ‚úÖ L∆∞u OTP m·ªõi v√†o Redis v·ªõi TTLa
        redisTemplate.opsForValue().set(key, otp, Duration.ofMinutes(ttlMinutes));
    }

    /**
     * L·∫•y OTP t·ª´ Redis
     */
    public String getOtp(String email, TokenType tokenType) {
        String key = tokenType.name() + "_" + email;
        return redisTemplate.opsForValue().get(key);
    }

    /**
     * X√≥a OTP kh·ªèi Redis (Sau khi x√°c th·ª±c th√†nh c√¥ng ho·∫∑c khi user y√™u c·∫ßu m√£ m·ªõi)
     */
    public void deleteOtp(String email, TokenType tokenType) {
        String key = tokenType.name() + "_" + email;
        redisTemplate.delete(key);
    }
}
